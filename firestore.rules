rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // This rule allows anyone with your Firestore database reference to view, edit,
    // and delete all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // all client requests to your Firestore database will be denied until you Update
    // your rules
    match /{document=**} {
      allow read, write: if request.auth.uid != null;
    }

    // Match any document in the 'users' collection
    match /users/{userId} {
      // Only the authenticated user can read and write their own document
      allow read, write: if request.auth.uid == userId;

      // Match any document in the 'groupsIDs' subcollection
      match /groupsIDs/{groupId} {
        // Only the authenticated user can read and write their own groups
        allow read, write: if request.auth.uid == userId;
      }
    }

    // Match any document in the 'groupss' collection
    match /groupss/{groupId} {
      // Any authenticated user can read any group
      allow read: if request.auth != null;

      // Only users who are a member of the group can write to the group
      allow write: if request.auth.uid in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groupsIDs;
    }
  }
}